This analysis code are based on the results from Madgraph5[1] and Delphes, which is fast-simulation package.
The results is store in ROOT file.
Format: https://cp3.irmp.ucl.ac.be/projects/delphes/wiki/WorkBook/RootTreeDescription

1) Make sure the Delphes path in MakeFile
	Ex: You can link Delphes path to here by "ln -s your_delphes_path Delphes"
2) Edit the Delphes path in env.csh
3) source env.ch
4) make
5) ./analysis.py --help 

6) Play in examples
 cd examples
 make
 ./ana_delphes tag_1_delphes_events.root result_TTtoLepJet.root
 root mkplot.cc #for making plots

[1] http://madgraph.hep.uiuc.edu
Download Madgraph5
tar -zxf Madgraph5.tar.gz
go to Madgraph5_folder
./bin/MG5_aMC
>> install pythia-pgs
>> install ExRootAnalysis
>> install Delphes
>> generate  p p > .......
>> launch
Turn on Pythia and Delphes
After some options, and wait a few minutes...
>> exit
Results in "PROC_sm_#/Events/run_##/tag_#_delphes_events.root"
 
*** Production Note ****
1) Di-muon channel
	>> generate p p > t t~ > b b~ mu- mu+ vm vm~
	>> output Production/TTtoDiMuon
	>> launch Production/TTtoDiMuon --name=Run_10K_Evts_01
2) Mutil-jet channel
	>> generate p p > t t~ > b b~ w+ w- ,( w+ > j j ),( w- > j j ) # Included un-pair top production 
	>> generate p p > t t~ , ( t > b w+ , w+ > j j ) , ( t~ > b~ w- , w- > j j )
	>> output Production/TTtoMutiJet
	>> launch Production/TTtoMutiJet --name=Run_10K_Evts_01
2) Lepton-jet channel
	>> generate p p > t t~, ( t > b w+, w+ > l+ vl ),( t~ > b~ w-, w- > j j)  
	>> add process p p > t t~, ( t > b w+, w+ > j j ),( t~ > b~ w-, w- > l- vl~)
	>> output Production/TTtoLeptonJet
	>> launch Production/TTtoLeptonJet --name=Run_10K_Evts_01
